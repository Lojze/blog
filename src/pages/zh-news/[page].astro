---
import BaseLayout from "../../layouts/BaseLayout.astro";

const pageTitle = "HackerNews Stories";
const description = "A list of stories from HackerNews.";


export async function getStaticPaths({ paginate }) {
  const translate = async (query) => {
    const response = await fetch("https://bold-cobra-70.deno.dev/translate",
      {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ text: query }),
      }
    );
    if (!response.ok) {
      return "翻译失败";
    }
    const result = await response.json();
    return result.translation[0].translation_text;
  }


  const response = await fetch('https://hacker-news.firebaseio.com/v0/topstories.json');
  const storyIds = await response.json();
  const stories = await Promise.all(storyIds.slice(0, 50).map(async (id) => {
    const res = await fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json`);
    let story = await res.json();
    story.titleZh = await translate(story.title);
    return story;
  }));
  return paginate(stories, { pageSize: 10 });
}

// 所有分页数据都在 "page" 参数中传递
let { page } = Astro.props;
let pages: { data: any[], url: { prev?: string, next?: string } } = page
---

<BaseLayout pageTitle={pageTitle} description={description}>
  <ul class="space-y-4">
    {pages.data.map((story, index) => (
      <li class="p-4 border rounded shadow hover:shadow-lg transition-shadow duration-200">
        <a href={story.url} target="_blank" rel="noopener noreferrer" class="text-blue-500 hover:text-blue-700 transition-colors duration-200">{story.titleZh}</a>
        <p class="text-blue-500 hover:text-blue-700 transition-colors duration-200">{story.title}</p>
        <p class="text-gray-600">By {story.by}</p>
      </li>
    ))}
  </ul>
  <div class="flex justify-end">
    {pages.url.prev ? 
            <a href={pages.url.prev} class="px-4 mr-2 py-2 bg-blue-500 text-white rounded hover:bg-blue-700">Previous</a> 
            : <span class="px-4 mr-2 py-2 bg-gray-200 text-gray-500 rounded cursor-not-allowed">Previous</span>}
        {pages.url.next ? 
            <a href={pages.url.next} class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-700">Next</a> 
            : <span class="px-4 py-2 bg-gray-200 text-gray-500 rounded cursor-not-allowed">Next</span>}
    </div>
</BaseLayout>